/*
 * hc_sr04-driver.c
 *
 *  Created on: May 3, 2025
 *      Author: sande
 */
#include "stm32f103xb.h"
#include "delay.h"
#include "uart-driver.h"
#include "hc_sr04-driver.h"

#define TRIG_PIN 1
#define ECHO_PIN 2

#define TRIG_PORT GPIOA
#define ECHO_PORT GPIOA

void HC_SR04_Init(void) {
    // Enable GPIOA
    RCC->APB2ENR |= RCC_APB2ENR_IOPAEN;

    // TRIG (PA1) - Output push-pull
    TRIG_PORT->CRL &= ~(GPIO_CRL_MODE1 | GPIO_CRL_CNF1);
    TRIG_PORT->CRL |= (GPIO_CRL_MODE1_1);  // 2 MHz
    TRIG_PORT->CRL |= (0 << GPIO_CRL_CNF1_Pos);  // Push-pull

    // ECHO (PA2) - Input floating
    ECHO_PORT->CRL &= ~(GPIO_CRL_MODE2 | GPIO_CRL_CNF2);
    ECHO_PORT->CRL |= (1 << GPIO_CRL_CNF2_Pos);  // Floating input
}

uint32_t HC_SR04_Read(void) {
    uint32_t time_us = 0;

    // Ensure trigger is low
    TRIG_PORT->ODR &= ~(1 << TRIG_PIN);
    delay_us(2);

    // Trigger high for 10us
    TRIG_PORT->ODR |= (1 << TRIG_PIN);
    delay_us(10);
    TRIG_PORT->ODR &= ~(1 << TRIG_PIN);

    // Wait for ECHO pin to go HIGH
    while (!(ECHO_PORT->IDR & (1 << ECHO_PIN)));

    // Measure HIGH pulse duration
    while (ECHO_PORT->IDR & (1 << ECHO_PIN)) {
        delay_us(1);
        time_us++;
        if (time_us > 30000) break;  // timeout 30 ms
    }

    // Distance in cm = time_us / 58
    return time_us / 58;
}


